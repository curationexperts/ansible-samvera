---
# ROLE: ruby
# roles/ruby/tasks/main.yml
#
# Installs the specified ruby version
# Usage:
#    - { role: ruby, ruby_version: '2.4.2'  }
#
# Reads https://cache.ruby-lang.org/pub/ruby/index.txt
# to find download URL and checksum


- name: DEPRECATION! use 'ruby_version' instead of 'ruby_ver'
  set_fact:
    ruby_version: ruby_ver
    when: defined(ruby_ver) & undefined(ruby_version)

- name: check if ruby {{ ruby_version }} is installed
  shell: ruby --version | grep {{ ruby_version }}
  ignore_errors: true
  register: ruby_preinstalled

- name: install ruby if it-s not already there
  block:
  - name: remove package ruby
    become: yes
    package: name=ruby state=absent

  - name: lookup download path and checksum from ruby-lang release index
    shell: curl https://cache.ruby-lang.org/pub/ruby/index.txt | grep {{ ruby_version}}.tar.gz
    register: ruby_index_line

  - name: separate index entry values
    set_fact:
      ruby_values: "{{ ruby_index_line.stdout | regex_findall('(\\S+)') }}"

  - name: get ruby url
    set_fact:
      ruby_gzip_url: "{{ ruby_values[1] }}"

  - name: get ruby checksum
    set_fact:
      ruby_sha_256: "{{ ruby_values[3] }}"

  - name: setup install directory
    set_fact:
      install_path: /home/{{ ansible_ssh_user }}/install

  - name: ensure install directory exists
    file:
      path: '{{ install_path }}'
      state: directory

  - name: download ruby
    get_url: url={{ ruby_gzip_url }} checksum="sha256:{{ ruby_sha_256 }}"  dest={{ install_path }}/ruby-{{ ruby_version}}.tar.gz

  - name: unzip ruby file
    unarchive: src={{ install_path }}/ruby-{{ ruby_version}}.tar.gz dest={{ install_path }}/ creates={{ install_path }}/ruby-{{ ruby_version}}/compile.c copy=no

  - name: configure ruby
    shell: cd {{ install_path }}/ruby-{{ ruby_version}} && ./configure --enable-shared creates={{ install_path }}/ruby-{{ ruby_version}}/Makefile

  - name: make ruby
    shell: cd {{ install_path }}/ruby-{{ ruby_version}} && make

  - name: install ruby
    become: yes
    shell: cd {{ install_path }}/ruby-{{ ruby_version}} && make install
  #when applied to each of the tasks in the block above
  when: ruby_preinstalled.failed

- name: update rubygems
  become: yes
  command: gem update --system
